server.port=8080

#spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:kanban}
# spring.datasource.username=${DB_USERNAME:admin}
# spring.datasource.password=${DB_PASSWORD:1234567}


# spring.jpa.properties.hibernate.show_sql=true
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.datasource.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true

# Connection to local mysql database for spring boot application properties
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3308}/${DB_NAME:notification}
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Enable jpa create table mode
spring.jpa.hibernate.ddl-auto=create
spring.datasource.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


springdoc.api-docs.path=/api-docs