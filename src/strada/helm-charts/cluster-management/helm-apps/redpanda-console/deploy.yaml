apiVersion: v1
kind: Namespace
metadata:
  name: redpanda-console

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redpanda-console
  namespace: redpanda-console
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redpanda-console
  template:
    metadata:
      labels:
        app: redpanda-console
    spec:
      containers:
        - name: redpanda-console
          image: docker.redpanda.com/vectorized/console:latest
          ports:
            - containerPort: 8080
          env:
            - name: CONFIG_FILEPATH
              value: /tmp/config.yml
            - name: CONSOLE_CONFIG_FILE
              value: |
                kafka:
                  brokers: ["kafka-controller-headless.kafka.svc.cluster.local:9092"]
          volumeMounts:
            - name: config-volume
              mountPath: /tmp
              subPath: config.yml
          command: ["/bin/sh", "-c", "echo \"$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"]
      volumes:
        - name: config-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redpanda-console
  namespace: redpanda-console
spec:
  selector:
    app: redpanda-console
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redpanda-console
  namespace: redpanda-console
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: redpanda-console.strada.appbr.store
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redpanda-console
            port:
              number: 80